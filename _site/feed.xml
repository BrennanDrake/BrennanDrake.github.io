<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-12-23T23:50:08-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Brennan Drake Portfolio</title><subtitle>Portfolio and Blog</subtitle><entry><title type="html">Landmarks</title><link href="http://localhost:4000/landmarks.html" rel="alternate" type="text/html" title="Landmarks" /><published>2024-11-19T00:00:00-05:00</published><updated>2024-11-19T00:00:00-05:00</updated><id>http://localhost:4000/landmarks</id><content type="html" xml:base="http://localhost:4000/landmarks.html"><![CDATA[<p><strong>Today’s Summary:</strong><br />
Today I implemented an rfid_landmark node that would publish the transform from the map frame to the PN5180 RFID reader’s frame for rfid detection events. As you can see in the video below, there is a lot of tolerance for that detection, and so the landmark moves with the robot a bit. In addition, you can see that the landmark is preexisting at the beginning of the video but rather than localizing the robot, the detection frame moves itself. This will be addressed soon. Immediate objectives are in the full post.</p>

<div class="video-container" style="max-width: 100%; margin: 0 auto;">
    <video id="Nov19" controls="" style="max-width: 100%; height: auto; display: block;">
        <source src="assets/blog/Nov24/Nov19.mp4" type="video/mp4" style="width:300px" />
    </video>
</div>

<!-- more -->

<p><br /><br />
With that said, the next objectives are to 1. integrate the landmark data into the map saver packager so that the landmark is baked into the saved maps. 2. ensure that the landmarks tied to the map then influence the localization on a new map. 3. allow detection events to contribute to a larger area of detection which will likely be a polygon or sphere enlarged by detection events and used as a whole for localization.</p>

<p><br /><br />
<br /><br />
<br /></p>
<footer>
    Blog content © Brennan Drake, 2024. Licensed under a 
    <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">CC BY-NC-ND 4.0 License</a>.
</footer>]]></content><author><name></name></author><summary type="html"><![CDATA[Today’s Summary: Today I implemented an rfid_landmark node that would publish the transform from the map frame to the PN5180 RFID reader’s frame for rfid detection events. As you can see in the video below, there is a lot of tolerance for that detection, and so the landmark moves with the robot a bit. In addition, you can see that the landmark is preexisting at the beginning of the video but rather than localizing the robot, the detection frame moves itself. This will be addressed soon. Immediate objectives are in the full post.]]></summary></entry><entry><title type="html">Cool Down / Integration</title><link href="http://localhost:4000/cooldown.html" rel="alternate" type="text/html" title="Cool Down / Integration" /><published>2024-11-16T00:00:00-05:00</published><updated>2024-11-16T00:00:00-05:00</updated><id>http://localhost:4000/cooldown</id><content type="html" xml:base="http://localhost:4000/cooldown.html"><![CDATA[<p><strong>Today’s Summary:</strong><br />
I set up a spare Raspberry Pi 4B+ as a Docker image registry server, configured to run automatically on power-up and accessible over my home Wi-Fi. Additionally, I reinstalled the fan I pilfered from the Pi case I am now using for docker and connected a 12V fan to the buck converter used to power the Arduino. Finally, I integrated my custom RFID publishing package into the turtlebot3_bringup_custom package. This package processes serial data from the RFID assembly and publishes detected IDs to the /rfid topic.</p>

<p><img src="assets/blog/Nov24/cooldown.jpg" alt="Docker cmd line" style="display: block; margin: 0 auto; width:100%; max-width:400px;" /></p>

<!-- more -->

<p>Details:</p>

<p>I finally got around to turning a spare pi 4B+ into a docker image registry server. It is now configured to automatically run the registry container on power on and is on my home wifi. I can plug it in and stow it anywhere and access my development images as needed at home.</p>

<p><img src="assets/blog/Nov24/docker.jpg" alt="Docker cmd line" style="display: block; margin: 0 auto; width:100%; max-width:400px;" /></p>

<p>In doing the above, I returned the fan back to the pi case and I installed a small spare 12v fan I had lying around. I tied it’s power into the input terminals for the stepdown converter (stepping 12v from the OPENCR board) down to the 5V of the arduino.<br />
Lastly, today I integrated my custom rfid publishing package into the turtlebot3_bringup_custom package which I had previously containerized. This package translates incoming serial data from the rfid assembly and outputs the detected rfid identity to the /rfid topic for later use.</p>

<p><br /><br />
<br /></p>
<footer>
    Blog content © Brennan Drake, 2024. Licensed under a 
    <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">CC BY-NC-ND 4.0 License</a>.
</footer>]]></content><author><name></name></author><summary type="html"><![CDATA[Today’s Summary: I set up a spare Raspberry Pi 4B+ as a Docker image registry server, configured to run automatically on power-up and accessible over my home Wi-Fi. Additionally, I reinstalled the fan I pilfered from the Pi case I am now using for docker and connected a 12V fan to the buck converter used to power the Arduino. Finally, I integrated my custom RFID publishing package into the turtlebot3_bringup_custom package. This package processes serial data from the RFID assembly and publishes detected IDs to the /rfid topic.]]></summary></entry><entry><title type="html">Containerization</title><link href="http://localhost:4000/Containerization.html" rel="alternate" type="text/html" title="Containerization" /><published>2024-10-27T00:00:00-04:00</published><updated>2024-10-27T00:00:00-04:00</updated><id>http://localhost:4000/Containerization</id><content type="html" xml:base="http://localhost:4000/Containerization.html"><![CDATA[<p>This past weekend, I was able to transfer all of the basic code on the turtlebot into a docker container. From there I confirmed the ability to access the relevant topics on my desktop pc on the same network (using rviz to visualize my custom urdf) and to teleop the robot as well.</p>

<p>I have also started to do my development inside of a vscode dev container. This allows me to easily contain all of my dependencies and maintain operation regardless of device used. I plan to eventually experiment with using this on a steam deck running linux.</p>

<!-- more -->

<p><br /><br />
<br /></p>
<footer>
    Blog content © Brennan Drake, 2024. Licensed under a 
    <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">CC BY-NC-ND 4.0 License</a>.
</footer>]]></content><author><name></name></author><summary type="html"><![CDATA[This past weekend, I was able to transfer all of the basic code on the turtlebot into a docker container. From there I confirmed the ability to access the relevant topics on my desktop pc on the same network (using rviz to visualize my custom urdf) and to teleop the robot as well. I have also started to do my development inside of a vscode dev container. This allows me to easily contain all of my dependencies and maintain operation regardless of device used. I plan to eventually experiment with using this on a steam deck running linux.]]></summary></entry><entry><title type="html">Project Goals V1.0</title><link href="http://localhost:4000/Project_Goals_V1.0.html" rel="alternate" type="text/html" title="Project Goals V1.0" /><published>2024-10-23T00:00:00-04:00</published><updated>2024-10-23T00:00:00-04:00</updated><id>http://localhost:4000/Project_Goals_V1.0</id><content type="html" xml:base="http://localhost:4000/Project_Goals_V1.0.html"><![CDATA[<h2 id="current-project-goals">Current Project Goals</h2>

<ol>
  <li><strong>[COMPLETED] Containerize Turtlebot3_bringup and RFID capture code</strong>
    <ul>
      <li>Allow for easier development with docker images saved on server registry</li>
    </ul>
  </li>
  <li><strong>[IN PROGRESS] Containerize rtabmap in VSCode dev container for easier development</strong>
    <ul>
      <li>By doing this, I’ll have a backup image / baseline to work off of.</li>
    </ul>
  </li>
  <li><strong>[COMPLETED] Create node to output RFID detection events as landmarks</strong>
    <ul>
      <li>Tie the RFID tag ID to the location transform from the map frame at the instant of detection</li>
    </ul>
  </li>
  <li><strong>[IN PROGRESS] Integrate RFID detection events into rtabmap as landmarks</strong>
    <ul>
      <li>Save detections with the map and use them for relocalization</li>
    </ul>
  </li>
</ol>

<p><img src="assets/img/Turtlebot/onshape_turtlebot_formatted.png" alt="Docker cmd line" style="display: block; margin: 0 auto; width:100%; max-width:300px;" /></p>

<!-- more -->
<p><br /><br />
<br /></p>
<footer>
    Blog content © Brennan Drake, 2024. Licensed under a 
    <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">CC BY-NC-ND 4.0 License</a>.
</footer>]]></content><author><name></name></author><summary type="html"><![CDATA[Current Project Goals [COMPLETED] Containerize Turtlebot3_bringup and RFID capture code Allow for easier development with docker images saved on server registry [IN PROGRESS] Containerize rtabmap in VSCode dev container for easier development By doing this, I’ll have a backup image / baseline to work off of. [COMPLETED] Create node to output RFID detection events as landmarks Tie the RFID tag ID to the location transform from the map frame at the instant of detection [IN PROGRESS] Integrate RFID detection events into rtabmap as landmarks Save detections with the map and use them for relocalization]]></summary></entry><entry><title type="html">First Project Update</title><link href="http://localhost:4000/First_Post.html" rel="alternate" type="text/html" title="First Project Update" /><published>2024-10-22T00:00:00-04:00</published><updated>2024-10-22T00:00:00-04:00</updated><id>http://localhost:4000/First_Post</id><content type="html" xml:base="http://localhost:4000/First_Post.html"><![CDATA[<p>I have recently decided to develop a project tracking section for my own personal documentation but also as a cool way to share my work. I will update this periodically with major milestones.</p>

<footer>
    Blog content © Brennan Drake, 2024. Licensed under a 
    <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">CC BY-NC-ND 4.0 License</a>.
</footer>]]></content><author><name></name></author><summary type="html"><![CDATA[I have recently decided to develop a project tracking section for my own personal documentation but also as a cool way to share my work. I will update this periodically with major milestones. Blog content © Brennan Drake, 2024. Licensed under a CC BY-NC-ND 4.0 License.]]></summary></entry></feed>